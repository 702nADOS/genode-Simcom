#
# Build
#

build {
	core init ecu 
	simcom/ecu
	simcom/sim
	drivers/timer
	drivers/usb
	drivers/gpio
	server/usb_terminal
}

#build {
##	bin/simcom_ecu
#	bin/simcom_sim
#}

create_boot_directory

#
# Generate config
#

install_config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL" />
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<start name="gpio_drv">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Gpio"/></provides>
	</start>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
	<start name="usb_drv">
		<resource name="RAM" quantum="7M"/>
		<provides>
			<service name="Usb"/>
			<service name="Nic"/>
		</provides>
		<config uhci="yes" ehci="yes" xhci="yes">
			<nic mac="02:00:00:00:01:01" />
			<raw/>
		</config>
	</start>
	<start name="usb_terminal">
		<resource name="RAM" quantum="2M"/>
		<provides><service name="Terminal"/></provides>
	</start>
	<start name="simcom_ecu">
		<binary name="simcom_ecu"/>
		<resource name="RAM" quantum="1M"/>
		<provides><service name="SimCom"/></provides>
	</start>
	<start name="simcom_sim">
		<binary name="simcom_sim"/>
		<resource name="RAM" quantum="1M"/>
	</start>
</config>}

#	<start name="usb_drv">
#		<resource name="RAM" quantum="12M"/>
#		<provides>
#			<service name="Usb"/>
#			<service name="Nic"/>
#		</provides>
#		<config uhci="yes" ehci="yes" xhci="yes">
#			<nic mac="02:00:00:00:01:01" />
#		</config>
#	</start>

#
# Boot image
#

build_boot_image {
	core init simcom_sim simcom_ecu
	ld.lib.so
	stdcxx.lib.so
	libc.lib.so
	libm.lib.so
	timer
	gpio_drv
	usb_drv
	usb_terminal
	lwip.lib.so
}

append qemu_args " -nographic "

run_genode_until forever
